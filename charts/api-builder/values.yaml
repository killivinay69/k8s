# Default values for api-builder.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.glams.com/glams/api-builder
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "stable"

imagePullSecrets: []
nameOverride: "api-builder"
fullnameOverride: "api-builder"

env:
  evn: dev
  # inline_runtime_chunk: "true"
  # react_app_studio_name: "TESTWFSTUDIO"
  # react_app_project_name: "GI.WORKFLOW"
  # react_app_api_url: "http://localhost:5001/api/api-builder"
  # react_app_api_key: "e600eadb-bebb-4b0d-9be7-4b3ca3363b8f"
  # react_app_activity_api_url: "http://localhost:5000/api/ActivityStore"
  # react_app_user_mgmt: "https://g7rnd02-5.glams.com/usermanagement/api"
  # react_app_api_interact_odata: "http://localhost:8007/interact/odata"
  # react_app_build_url: "https://g7rnd02-5.glams.com/apibuildernew/api/ApiCodeGenerator/apibuilder"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations:
- effect: NoSchedule
  key: cattle.io/os
  operator: Equal
  value: linux

affinity: {}

persistence:
  enabled: enable
  storageClass: longhorn
  accessMode: ReadWriteOnce
  size: 20Gi
